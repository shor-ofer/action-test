name: Build and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # Grants permission to create releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      BUILD_TYPE: Release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full git history and tags

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Build
        run: cmake --build build --config ${{ env.BUILD_TYPE }}

      - name: Prepare Artifact
        run: |
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp build/${{ env.BUILD_TYPE }}/hello.exe dist/
          else
            cp build/hello dist/
            chmod +x dist/hello
          fi
        shell: bash

      - name: Create ZIP Archive
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          PLATFORM=$(echo "${{ runner.os }}")
          ZIP_NAME="hello-${TAG_NAME}-${PLATFORM}.zip"
          cd dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            powershell -Command "Compress-Archive -Path hello.exe -DestinationPath $ZIP_NAME"
          else
            zip -r $ZIP_NAME hello
          fi
          mv $ZIP_NAME ..
        shell: bash

      - name: Generate changelog from last tag
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "Last tag: $LAST_TAG"
          LOG=$(git log "$LAST_TAG"..HEAD --pretty=format:"- %s")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "Welcome to my git action :smile:" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: hello-${{ github.ref_name }}-${{ runner.os }}.zip
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
